Adding a Submodule
To add an external repository as a submodule:
git submodule add <repository-url> <submodule-path>
Example:
git submodule add https://github.com/monicag-gupta/lib_repo.git libs/library
This creates a new folder libs/library, linking it to the external Git repository.

Initializing and Cloning a Repository with Submodules
When you clone a repository that contains submodules, you need to initialize them:
git submodule init
git submodule update
Alternatively, you can clone a repository along with its submodules in one step:
git clone --recurse-submodules <repository-url>
Example:
git clone --recurse-submodules https://github.com/monicag-gupta/library4Git.git


Removing a Submodule (Optional)
If you no longer need a submodule:
git submodule deinit -f libs/library
rm -rf .git/modules/libs/library
git rm -f libs/library
git commit -m "Removed library4Git submodule"





Updating a Submodule
If the external repository has updates, you can update your submodule:
git submodule update --remote
To pull the latest changes and update the submodule:
cd libs/library
git pull origin main
Then, commit the updated submodule reference in the main repository:
git add libs/library
git commit -m "Updated submodule to the latest version"


Removing a Submodule
1. Unlink the submodule from tracking:
git submodule deinit -f libs/library
2. Remove the submodule directory:
rm -rf .git/modules/libs/library
3. Remove the submodule entry from .gitmodules:
git rm -f libs/library
4. Commit the changes:
git commit -m "Removed submodule library"





Example: Submodules:

Scenario:
You are working on a project called gitAristocrat and want to include an external repository, library4Git, as a submodule inside it.
Add a Submodule
Now, add an external repository (for example, a GitHub repository) as a submodule inside libs/library:
git submodule add https://github.com/monicag-gupta/library4Git.git  libs/library
This command does two things:
Clones library4Git inside the libs/library directory.
Creates a .gitmodules file to track submodule configuration.
Check the .gitmodules file:
cat .gitmodules


Now, commit the submodule addition:
git add .gitmodules libs/library
git commit -m "Added library4Git as a submodule"

Cloning a Repository with Submodules
If someone clones gitAristocrat, they wonâ€™t automatically get the submodules. Instead, they should use:
git clone --recurse-submodules https://github.com/monicag-gupta/gitAristrocat.git
If they cloned it normally (git clone), they must initialize and update submodules separately:
git submodule init  
git submodule update

Updating a Submodule to the Latest Version
If library4Git has new commits, update the submodule inside gitAristocrat:
cd libs/library
git pull origin main
Then, commit the updated submodule reference in gitAristocrat:
cd ../..
git add libs/library
git commit -m "Updated library4Git to the latest version"

Updating All Submodules in the Repository
To update all submodules at once:
git submodule update --remote
This fetches the latest commits from the tracked branch of each submodule.
